<style>
	@import url('https://fonts.googleapis.com/css2?family=Lato:wght@400;700&family=Poppins:wght@400;500;600;700&display=swap');

	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	a {
		text-decoration: none;
	}

	li {
		list-style: none;
	}

	:root {
		--poppins: 'Poppins', sans-serif;
		--lato: 'Lato', sans-serif;

		--light: #F9F9F9;
		--blue: #3C91E6;
		--light-blue: #CFE8FF;
		--grey: #eee;
		--dark-grey: #AAAAAA;
		--dark: #342E37;
		--red: #DB504A;
		--yellow: #FFCE26;
		--light-yellow: #FFF2C6;
		--orange: #FD7238;
		--light-orange: #FFE0D3;
	}

	html {
		overflow-x: hidden;
	}

	body.dark {
		--light: #0C0C1E;
		--grey: #060714;
		--dark: #FBFBFB;
	}

	body {
		background: var(--grey);
		overflow-x: hidden;
	}





	/* SIDEBAR */

	/* SIDEBAR */





	/* CONTENT */
	#content {
		position: relative;
		width: calc(100% - 280px);
		left: 280px;
		transition: .3s ease;
	}

	#sidebar.hide~#content {
		width: calc(100% - 60px);
		left: 60px;
	}




	/* NAVBAR */

	/* NAVBAR */





	/* MAIN */
	#content main {
		width: 100%;
		padding: 36px 24px;
		font-family: var(--poppins);
		max-height: calc(100vh - 56px);
		overflow-y: auto;
	}

	#content main .head-title {
		display: flex;
		align-items: center;
		justify-content: space-between;
		grid-gap: 16px;
		flex-wrap: wrap;
	}

	#content main .head-title .left h1 {
		font-size: 36px;
		font-weight: 600;
		margin-bottom: 10px;
		color: var(--dark);
	}

	#content main .head-title .left .breadcrumb {
		display: flex;
		align-items: center;
		grid-gap: 16px;
	}

	#content main .head-title .left .breadcrumb li {
		color: var(--dark);
	}

	#content main .head-title .left .breadcrumb li a {
		color: var(--dark-grey);
		pointer-events: none;
	}

	#content main .head-title .left .breadcrumb li a.active {
		color: var(--blue);
		pointer-events: unset;
	}

	#content main .head-title .btn-download {
		height: 36px;
		padding: 0 16px;
		border-radius: 36px;
		background: var(--blue);
		color: var(--light);
		display: flex;
		justify-content: center;
		align-items: center;
		grid-gap: 10px;
		font-weight: 500;
	}




	#content main .box-info {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
		grid-gap: 24px;
		margin-top: 36px;
	}

	#content main .box-info li {
		padding: 24px;
		background: var(--light);
		border-radius: 20px;
		display: flex;
		align-items: center;
		grid-gap: 24px;
	}

	#content main .box-info li .bx {
		width: 80px;
		height: 80px;
		border-radius: 10px;
		font-size: 36px;
		display: flex;
		justify-content: center;
		align-items: center;
	}

	#content main .box-info li:nth-child(1) .bx {
		background: var(--light-blue);
		color: var(--blue);
	}

	#content main .box-info li:nth-child(2) .bx {
		background: var(--light-yellow);
		color: var(--yellow);
	}

	#content main .box-info li:nth-child(3) .bx {
		background: var(--light-orange);
		color: var(--orange);
	}

	#content main .box-info li .text h3 {
		font-size: 24px;
		font-weight: 600;
		color: var(--dark);
	}

	#content main .box-info li .text p {
		color: var(--dark);
	}

	#content main .table-data {
		display: flex;
		flex-wrap: wrap;
		grid-gap: 24px;
		margin-top: 24px;
		width: 100%;
		color: var(--dark);
	}

	#content main .table-data>div {
		border-radius: 20px;
		background: var(--light);
		padding: 24px;
		overflow-x: auto;
	}

	#content main .table-data .head {
		display: flex;
		align-items: center;
		grid-gap: 16px;
		margin-bottom: 24px;
	}

	#content main .table-data .head h3 {
		margin-right: auto;
		font-size: 24px;
		font-weight: 600;
	}

	#content main .table-data .head .bx {
		cursor: pointer;
	}

	#content main .table-data .order {
		flex-grow: 1;
		flex-basis: 500px;
	}

	#content main .table-data .order table {
		width: 100%;
		border-collapse: collapse;
	}

	#content main .table-data .order table th {
		padding-bottom: 12px;
		font-size: 13px;
		text-align: left;
		border-bottom: 1px solid var(--grey);
	}

	#content main .table-data .order table td {
		padding: 16px 0;
	}

	#content main .table-data .order table tr td:first-child {
		display: flex;
		align-items: center;
		grid-gap: 12px;
		padding-left: 6px;
	}

	#content main .table-data .order table td img {
		width: 36px;
		height: 36px;
		border-radius: 50%;
		object-fit: cover;
	}

	#content main .table-data .order table tbody tr:hover {
		background: var(--grey);
	}

	#content main .table-data .order table tr td .status {
		font-size: 10px;
		padding: 6px 16px;
		color: var(--light);
		border-radius: 20px;
		font-weight: 700;
	}

	#content main .table-data .order table tr td .status.completed {
		background: var(--blue);
	}

	#content main .table-data .order table tr td .status.process {
		background: var(--yellow);
	}

	#content main .table-data .order table tr td .status.pending {
		background: var(--orange);
	}


	#content main .table-data .todo {
		flex-grow: 1;
		flex-basis: 300px;
	}

	#content main .table-data .todo .todo-list {
		width: 100%;
	}

	#content main .table-data .todo .todo-list li {
		width: 100%;
		margin-bottom: 16px;
		background: var(--grey);
		border-radius: 10px;
		padding: 14px 20px;
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

	#content main .table-data .todo .todo-list li .bx {
		cursor: pointer;
	}

	#content main .table-data .todo .todo-list li.completed {
		border-left: 10px solid var(--blue);
	}

	#content main .table-data .todo .todo-list li.not-completed {
		border-left: 10px solid var(--orange);
	}

	#content main .table-data .todo .todo-list li:last-child {
		margin-bottom: 0;
	}

	/* MAIN */
	/* CONTENT */









	@media screen and (max-width: 768px) {
		#sidebar {
			width: 200px;
		}

		#content {
			width: calc(100% - 60px);
			left: 200px;
		}

		#content nav .nav-link {
			display: none;
		}
	}






	@media screen and (max-width: 576px) {
		#content nav form .form-input input {
			display: none;
		}

		#content nav form .form-input button {
			width: auto;
			height: auto;
			background: transparent;
			border-radius: none;
			color: var(--dark);
		}

		#content nav form.show .form-input input {
			display: block;
			width: 100%;
		}

		#content nav form.show .form-input button {
			width: 36px;
			height: 100%;
			border-radius: 0 36px 36px 0;
			color: var(--light);
			background: var(--red);
		}

		#content nav form.show~.notification,
		#content nav form.show~.profile {
			display: none;
		}

		#content main .box-info {
			grid-template-columns: 1fr;
		}

		#content main .table-data .head {
			min-width: 420px;
		}

		#content main .table-data .order table {
			min-width: 420px;
		}

		#content main .table-data .todo .todo-list {
			min-width: 420px;
		}
	}




	body {
		scrollbar-width: thin;
		scrollbar-color: transparent transparent;
	}

	body::-webkit-scrollbar {
		width: 0.1em;
	}

	body::-webkit-scrollbar-thumb {
		background-color: transparent;
	}
</style>

<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<!-- Boxicons -->
	<link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
	<!-- My CSS -->
	<link rel="stylesheet" href="style.css">

	<title>AdminHub</title>

	<style>
		.content-container {
			display: flex;
			flex-wrap: wrap;
		}

		.main-content {
			flex: 1;
			margin-right: 20px;
		}

		.graph-container {
			flex: 1;
		}
	</style>
</head>

<body>
	<div class="content-container">
		<section id="content">
			<main class="main-content">
				<div class="head-title">
					<div class="left">
						<h1>Dashboard</h1>
						{{!-- <ul class="breadcrumb">
							<li>
								<a href="#">Dashboard</a>
							</li>
							<li><i class='bx bx-chevron-right'></i></li>
							<li>
								<a class="active" href="#">Home</a>
							</li>
						</ul> --}}
					</div>
					{{!-- <a href="#" class="btn-download">
						<i class='bx bxs-cloud-download'></i>
						<span class="text">Download PDF</span>
					</a> --}}
					<form action="download" method="post">

						<button class="btn btn-outline-success" type="submit">Download</button>
					</form>
				</div>

				<ul class="box-info">
					<li>
						<i class='bx bxs-calendar-check'></i>
						<span class="text">
							<h3>{{totalproduct}}</h3>
							<p>Total Product</p>
						</span>
					</li>
					<li>
						<i class='bx bxs-group'></i>
						<span class="text">
							<h3>{{totaluser}}</h3>
							<p>Total User</p>
						</span>
					</li>
					<li>
						<i class='bx bxs-dollar-circle'></i>
						<span class="text">
							<h3>{{totalAmount.totalAmount}}</h3>
							<p>Total Amount</p>
						</span>
					</li>
				</ul>

	</div>
	</main>

	<div style="margin-left: 20rem; width: 800px; height:400px " class="graph-container">
		<canvas id="myChart"></canvas>
	</div>
	<div class="box-container">
  <div class="box" style="float: left;">
    <h4 class="box-heading">Payment Method</h4>
    <canvas id="doughnutChart" width="300" height="300"></canvas>
  </div>
</div>


<style>
  .box-container {
    display: flex;
    justify-content: center;
	margin-top: 70px;
	
  }

  .box {
    width: 400px;
    height: 450px;
    background-color: #ffffff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);
    padding: 15px;
  }
    .box-heading {
    text-align: center;
    margin-bottom: 20px;
  }
</style>




	{{!-- <div style="display: flex; justify-content: center;">
		<div style="padding-right: 100px;">
			<canvas id="doughnutChart2" width="350" height="320"></canvas>
		</div>
	</div> --}}

	{{!-- <div>
		<form action="download" method="post">
			<button type="submit">Download</button>
		</form>
	</div> --}}

	<!-- Chart.js library -->
	<script src="https://cdn.jsdelivr.net/npm/chart.js@3.5.1"></script>

	<script>
		document.addEventListener('DOMContentLoaded', function () {
			// Line chart configuration
			const ctx = document.getElementById('myChart').getContext('2d');

			const labels = ['week 1', 'week 2', 'week 3', 'week 4'];
			const data = {
				labels: labels,
				datasets: [{
					label: 'total order Dataset',
					data: [0, {{ monthlydata }}],
				fill: false,
				borderColor: 'rgb(75, 192, 192)',
				tension: 0.1
			}]
		};

		const config = {
			type: 'line',
			data: data,
			options: {
				responsive: true,
				maintainAspectRatio: false,
				scales: {
					y: {
						beginAtZero: true
					}
				}
			}
		};

		const myChart = new Chart(ctx, config);

		// payment Doughnut chart configuration
		const doughnutCtx = document.getElementById('doughnutChart').getContext('2d');

		const doughnutData = {
			labels: ['Cash Payments', 'Online Payments'],
			datasets: [{
				label: 'Payment Method',
				data: [{{ paymentCounts.codCount }}, {{ paymentCounts.onlineCount }}],
			backgroundColor: ['rgb(255,165,0)', 'rgb(255,255,0)'],
			hoverOffset: 4,
        }],
      };

		const doughnutConfig = {
			type: 'doughnut',
			data: doughnutData,
			options: {
				responsive: true,
				maintainAspectRatio: false,
				plugins: {
					legend: {
						position: 'bottom',
					},
				},
			},
		};

		const doughnutChart = new Chart(doughnutCtx, doughnutConfig);

		// payment Doughnut chart configuration end


		// category Doughnut chart configuration 2

	/*	const doughnutCtx2 = document.getElementById('doughnutChart2').getContext('2d');
           getItemCategoryCounts()
			.then(categoryCounts => {
				console.log(categoryCounts, "hsdhd")
				const doughnutData = {
					labels: categoryCounts.map(category => category._id),
					datasets: [{
						label: 'Item Category Count',
						data: categoryCounts.map(category => category.count),
						backgroundColor: ['rgb(255, 165, 0)', 'rgb(255, 255, 0)', 'rgb(0, 128, 0)'],
						hoverOffset: 4,
					}],
				};

				const doughnutConfig2 = {
					type: 'doughnut',
					data: doughnutData,
					options: {
						responsive: true,
						maintainAspectRatio: false,
						plugins: {
							legend: {
								position: 'bottom',
							},
						},
					},
				};
				const doughnutChart2 = new Chart(doughnutCtx2, doughnutConfig2);
			})
			.catch(error => {
				console.error('Error fetching item category counts:', error);
			}); */

       // category Doughnut chart configuration 2 end 





    });


	</script>
</body>

</html>